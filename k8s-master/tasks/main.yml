---
# tasks file for k8s-master

- debug:
        msg: "Configuring the master node.."
- name: "Configuring repository for K8s"
  yum_repository:
            name: "K8s-repo"
            description: "Repository for K8s"
            baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
            gpgcheck: no

- name: "Installing Software"
  package:
          name: "{{ item }}"
          state: present
  loop: "{{ package_name }}"

- name: "Starting services"
  service:
          name: "{{ item }}"
          state: started
  loop: "{{ package }}"

- name: "Pulling docker images"
  command: "kubeadm config images pull"
- name: "Changing the driver to systemd"
  copy:
            dest: "/etc/docker/daemon.json"
            content: '{
                      "exec-opts": ["native.cgroupdriver=systemd"]
                      }'
- name: "Restarting docker service"
  service:
            name: "docker"
            state: restarted
- name: "Installing iproute-tc software"
  package:
            name: "iproute-tc"
            state: present
- name: "Bridge to 1"
  shell: echo "1" > /proc/sys/net/bridge/bridge-nf-call-iptables


- name: "Initializing kubeadm and ignoring RAM and CPU errors"
  command: "kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"

- name: "Creating .kube directory"
  command: "mkdir -p $HOME/.kube"

- name: "Copying admin.conf file to .kube directory"
  shell: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

- name: "Changing owner .kube directory"
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: "Setting up Flannel"
  shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  changed_when: False

- debug:
        msg: "Hurry! Our system is configured as a master node"

- name: "Printing the join command for worker nodes"
  shell: "kubeadm token create --print-join-command"
  register: token
- name: "join command for the worker nodes"
  debug:
      msg: "{{ token['stdout'] }}"

